<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.org.ticketzone.mapper.AppMngrMapper">

	<select id="ownerList" resultType="com.org.ticketzone.domain.OwnerVO">
		select * from owner
	</select>
	
	<select id="memberList" resultType="com.org.ticketzone.domain.MemberVO">
		select * from member
	</select>
	
	<select id="storeList" resultType="com.org.ticketzone.domain.StoreVO">
		select a.*, b.img_uuid, b.img_uploadpath, b.img_filename 
		from store a, store_attach b 
		where owner_id = #{owner_id} 
		and a.license_number = b.license_number
	</select>
	
	<select id="getStore" resultType="com.org.ticketzone.domain.StoreVO">
		select * from store where license_number = #{license_number}
	</select>
	
	<select id="getToken" resultType="com.org.ticketzone.domain.TokenVO">
		select token_id, member_id from token where member_id = #{member_id}
	</select>
	
	
	<select id="menuList" resultType="com.org.ticketzone.domain.StoreMenuVO">
		select * from store_menu
	</select>
	
	<select id="categorieList" resultType="com.org.ticketzone.domain.CategorieVO">
		<![CDATA[
		select * from categorie where cate_code like 'F' || '%'
		]]>	 
	</select>
	
	<select id="NumberTicketList" resultType="com.org.ticketzone.domain.NumberTicketVO">
		select ticket_code, wait_number, the_number, license_number, member_id, ticket_status, ticket_reg,
   		 case when ticket_status = -1 then 'success'
         	  when ticket_status = 0 then 'wait' 
         	  when ticket_status = 1 then 'success'
         	  when ticket_status = 2 then 'cancel'
         	  when ticket_status = 3 then 'absence'
         	  end as string_status
    		  from number_ticket
	</select>
	
	<insert id="M_issue_ticket">
		insert into number_ticket(ticket_code, wait_number, the_number, license_number, member_id, ticket_status, ticket_reg)
		values(201905201234578910001, 1, #{the_number}, 1234578910, #{member_id}, 0, sysdate)
	</insert>
	
	<!-- 최초의 번호표인지 확인 -->
	<select id="M_codeSelect" resultType="String">
		<![CDATA[
		select nvl(max(code1), 'not')
		as code1
		from make_code
		where code1 like to_char(sysdate, 'yyyymmdd') || 
		(select license_number 
		from store where license_number = '1234578910')
		|| '%'
		]]>
	</select>

	<!-- 번호표 코드 최초생성 -->
	<insert id="M_firstCode">
		<![CDATA[
		insert into make_code
		values((select to_char(sysdate,
		'yyyymmdd') from dual)
		|| (select license_number
		from store
		where
		license_number = '1234578910'), '000')
		]]>
	</insert>
	
	<!-- 001번 번호표 생성 -->
	<insert id="M_makeTicket">
		<![CDATA[
		insert into number_ticket
		(ticket_code, wait_number, the_number, license_number, member_id, ticket_status)
		values(
		(select (code1 || code2) + 1 as code
		from make_code
		where code1 like to_char(sysdate, 'yyyymmdd') ||
		(select
		license_number from store where license_number = '1234578910')), 
		1,				
		#{the_number}, 
		'1234578910', 
		#{member_id}, 
		0)
		]]>
	</insert>
	
	<insert id="M_plusTicket">
		<![CDATA[
		insert into number_ticket
		(ticket_code, wait_number, the_number, license_number, member_id, ticket_status)
		values(
		(select (ticket_code + 1) as ticket_code
		from (select ticket_code from number_ticket 
		where ticket_code like to_char(sysdate,'yyyymmdd') || 
		(select license_number 
		from store 
		where license_number = '1234578910') || '%'
		order by ticket_code desc)
		where rownum <= 1),
		(select (wait_number+1) as wait_number
		from (select wait_number from number_ticket
		where ticket_code like to_char(sysdate,'yyyymmdd') ||
		(select license_number
		from store
		where license_number = '1234578910') || '%'
		order by wait_number desc)
		where rownum <= 1),
		#{the_number}, 
		'1234578910', 
		#{member_id}, 
		0)
		]]>
	</insert>
	<select id="M_chart" resultType="com.org.ticketzone.domain.NumberTicketVO">
		<![CDATA[
		with
		chart as (
		select substr(ticket_reg,10,2) as ticket_reg, sum(the_number) as the_number, count(ticket_code) as team
		from number_ticket
		where license_number = '1597530000' and
		ticket_reg like to_char(to_date('19/04/30', 'yy/mm/dd')+1, 'yy/mm/dd') || '%'
		and ticket_status = 1
		group by substr(ticket_reg,10,2)
		order by ticket_reg),
		today as (
		select to_char(to_date('19/04/30','yyyy/mm/dd')+1, 'yyyy/mm/dd') as today		
		from dual)
		select a.*, b.today 
		from chart a, today b
		]]>
	</select>	
	
	<update id="success_ticket">
	<![CDATA[
		update number_ticket
		set wait_number =
		case
		when wait_number = -1 then 0
		when ticket_status = 0 then (wait_number-1)
		when ticket_status = 1 then wait_number
		when ticket_status = 2 then 0
		when ticket_status = 3 then 0
		else wait_number
		end
		where ticket_code like to_char(sysdate,'yyyymmdd') || #{license_number} || '%'
		]]>
	</update>
	
	<update id="success_status">
		<![CDATA[
		update number_ticket
		set ticket_status =
		case 
		when wait_number = -1 then 1
		when wait_number = 0 then 1
		else ticket_status
		end
		where ticket_code like to_char(sysdate, 'yyyymmdd') || #{license_number} || '%'
		and ticket_status not in(1,2,3)
		]]>
	</update>
	
	<update id="update_time">
	 	update store
	 	set store_time = #{store_time}
	 	where license_number = #{license_number}
	</update>	
	
	<update id="store_max">
		update store
		set max_number = #{max_number}
		where license_number = #{license_number}
	</update>
	
	<update id="store_enable">
		update store
		set store_status = #{store_status}
		where license_number = #{license_number}
	</update>
</mapper>